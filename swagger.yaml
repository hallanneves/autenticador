swagger: "2.0"
info:
  description: "Essa API foi desenvolvida para gerenciar o servico de autenticacao\
    \ de usuario em um microserviço genérico.\n É necesário um tokem de acesso para a aplicação acessar a API de autenticação. Pode ser removido mediante analise do projeto."
  version: "1.0"
  title: "Autenticador"
basePath: "/v1"
schemes:
- "http"
- "https"
security:
- api_key: []
paths:
  /auth:
    post:
      tags:
      - "auth"
      summary: "Valida um usuário e senha"
      description: "O sistema valida os usuários e senha fazendo cache de dados do usuário por 10 segundos. Em caso de troca de senha é necesário aguardar esse tempo para realizar novas tentativas.\n\
      \ Requisições do mesmo IP ou usuário com a senha errada 5 vezes entrão na fila de bloqueio e permanecem lá por 3 min. *Podendomos futuramente colocar o IP do cliente no FireWall do SO.*\n\
      \ O sistema de autenticação tem como restrição senhas de no mínimo 6 caracteres e no máximo 200.\n\
        \ As autenticação tem como resposta OK, 200, ou erro de autenticação.\n"
      operationId: "validaCredenciais"
      consumes:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "#/definitions/Credenciais"
      responses:
        200:
          description: "Status 200, Success"
        401:
          description: "Status 401, StatusUnauthorized"
        500:
          description: "Status 500, StatusInternalServerError"
          schema:
            $ref: "#/definitions/Erro"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Erro:
    type: "object"
    properties:
      Mensagem:
        type: "string"
  Credenciais:
    type: "object"
    required:
    - "usuario"
    - "senha"
    properties:
      usuario:
        type: "string"
        description: "Username, email ou código do usuário"
        minLength: 1
        maxLength: 200
      senha:
        type: "string"
        description: "Senha de acesso"
        minLength: 1
        maxLength: 200
  Token:
    type: "string"
    minLength: 1
